# Generated by Django 3.2.7 on 2022-08-23 08:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import userApi.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=250, unique=True, verbose_name='email')),
                ('phone_no', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('refer_code', models.CharField(blank=True, max_length=8, null=True)),
                ('users_ref_code', models.CharField(blank=True, max_length=8, unique=True)),
                ('profile_img', models.ImageField(default=userApi.models.get_default_profile_img, max_length=255, upload_to=userApi.models.get_profile_image_filepath)),
                ('otp', models.CharField(blank=True, max_length=4, null=True, unique=True)),
                ('coins', models.CharField(default=0, max_length=11)),
                ('user_type', models.CharField(choices=[(0, 'superadmin'), (1, 'admin'), (2, 'subadmin'), (3, 'executive'), (4, 'organizer'), (5, 'user')], default=5, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Add_service_ev',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=500)),
                ('service_price', models.FloatField(max_length=50)),
                ('service_price_type', models.CharField(choices=[('per_day', 'Per Day'), ('per_event', 'Per Event'), ('per_person', 'Per Person')], default='per_day', max_length=50)),
                ('service_quantity', models.CharField(max_length=50)),
                ('service_desc', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.TextField(blank=True, max_length=5000)),
                ('image', models.FileField(blank=True, max_length=255, null=True, upload_to=userApi.models.asd_image_filepath)),
                ('video', models.FileField(blank=True, max_length=255, null=True, upload_to=userApi.models.asd_video_filepath)),
                ('position', models.CharField(choices=[('2', 'EVENT VIEW PAGE'), ('0', 'HOME PAGE'), ('1', 'EVENT LISTING PAGE')], default=0, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='createEvent',
            fields=[
                ('event_type', models.CharField(choices=[('personal_skills', 'Personal Skills Bussiness'), ('places', 'Have You Place'), ('group_skills', 'Group Skills Bussiness')], default='places', max_length=50)),
                ('eventId', models.AutoField(primary_key=True, serialize=False)),
                ('display_name', models.CharField(max_length=50)),
                ('t_and_c', models.TextField(max_length=5000)),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('pinterest', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('discountId', models.CharField(max_length=50)),
                ('calender', models.CharField(max_length=255)),
                ('live', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Emails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('categoryId', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gst', models.FileField(max_length=255, upload_to='image/events/company/gst')),
                ('contact_no', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('flat_no', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('area', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('eventId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_details', to='userApi.createevent')),
            ],
        ),
        migrations.CreateModel(
            name='ForWho',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('for_who', models.IntegerField()),
                ('plan_name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='GetInTouch',
            fields=[
                ('gitId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=250, verbose_name='email')),
                ('contact', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(10)])),
                ('message', models.TextField(max_length=50000)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, max_length=5000)),
                ('image', models.FileField(blank=True, max_length=255, upload_to=userApi.models.notification_image_filepath)),
                ('notification_type', models.CharField(choices=[('1', 'SMS'), ('2', 'NOTIFICATION'), ('3', 'EMAIL')], default=1, max_length=10)),
                ('forwhat', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='O_PartnerCompanys',
            fields=[
                ('parcomId', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=250, null=True)),
                ('categoryId', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=250)),
                ('mobile_no', models.CharField(max_length=12)),
                ('alt_mobile_no', models.CharField(max_length=12)),
                ('email_id', models.EmailField(max_length=250, verbose_name='email')),
                ('equip_ids', models.CharField(max_length=255, null=True)),
                ('artist', models.CharField(max_length=250, null=True)),
                ('artist_price', models.FloatField(max_length=250, null=True)),
                ('decor', models.CharField(max_length=250, null=True)),
                ('decor_price', models.FloatField(max_length=250, null=True)),
                ('w_price', models.FloatField(max_length=250)),
                ('w_discount', models.CharField(max_length=250, null=True)),
                ('travel_cost', models.CharField(max_length=250, null=True)),
                ('accommodation', models.CharField(max_length=250, null=True)),
                ('food', models.CharField(max_length=250, null=True)),
                ('com_name', models.CharField(max_length=250)),
                ('com_gstfile', models.FileField(max_length=255, null=True, upload_to=userApi.models.get_partnercompany_pdf_filepath)),
                ('com_contact', models.CharField(max_length=12)),
                ('com_email', models.EmailField(max_length=250, verbose_name='email')),
                ('com_address', models.TextField(max_length=200)),
                ('let', models.TextField(blank=True, max_length=5100)),
                ('long', models.TextField(blank=True, max_length=5100)),
                ('price', models.FloatField(max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, max_length=500)),
                ('youtube', models.CharField(blank=True, max_length=500)),
                ('twitter', models.CharField(blank=True, max_length=500)),
                ('pinterest', models.CharField(blank=True, max_length=500)),
                ('instagram', models.CharField(blank=True, max_length=500)),
                ('vimeo', models.CharField(blank=True, max_length=500)),
                ('live', models.BooleanField(default=False)),
                ('whishlist_status', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='O_PersonalSkills',
            fields=[
                ('perskillId', models.AutoField(primary_key=True, serialize=False)),
                ('pro_category', models.CharField(max_length=250)),
                ('pro_category_id', models.IntegerField(null=True)),
                ('profession', models.CharField(max_length=250)),
                ('profession_id', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=250)),
                ('mobile_no', models.CharField(max_length=12)),
                ('alt_mobile_no', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=250, verbose_name='email')),
                ('work_price', models.FloatField(max_length=250)),
                ('is_price_per_hr', models.BooleanField(default=False)),
                ('work_discount', models.CharField(max_length=250, null=True)),
                ('travel_cost', models.CharField(max_length=250, null=True)),
                ('accommodation', models.CharField(max_length=250, null=True)),
                ('food', models.CharField(max_length=250, null=True)),
                ('equip_ids', models.CharField(max_length=255, null=True)),
                ('com_name', models.CharField(max_length=250)),
                ('com_gstfile', models.FileField(max_length=255, null=True, upload_to=userApi.models.get_personalskill_pdf_filepath)),
                ('com_contact', models.CharField(max_length=12)),
                ('com_email', models.EmailField(max_length=250, verbose_name='email')),
                ('com_address', models.TextField(max_length=200)),
                ('let', models.TextField(blank=True, max_length=5100)),
                ('long', models.TextField(blank=True, max_length=5100)),
                ('price', models.FloatField(max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, max_length=250)),
                ('youtube', models.CharField(blank=True, max_length=250)),
                ('twitter', models.CharField(blank=True, max_length=250)),
                ('pinterest', models.CharField(blank=True, max_length=250)),
                ('instagram', models.CharField(blank=True, max_length=250)),
                ('vimeo', models.CharField(blank=True, max_length=250)),
                ('live', models.BooleanField(default=False)),
                ('whishlist_status', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerCompanyCategory',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='pc_artist',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('artist', models.CharField(max_length=255)),
                ('price', models.FloatField(max_length=100)),
                ('price_type', models.CharField(choices=[('2', 'PER DAY'), ('1', 'PER HOUR')], default=1, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='pc_decor',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('decor_type', models.CharField(max_length=255)),
                ('decor_price', models.FloatField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalSkillCategory',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Place_Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IncludingFacilities', models.CharField(choices=[('romantic_lunch_dinner', 'Romantic Lunch/Dinner'), ('romantic_candlelight_dinner', 'Romantic Candlelight Dinner'), ('romantic_stay', 'Romantic Stay')], default='romantic_stay', max_length=100)),
                ('person_capacity', models.FloatField(max_length=250)),
                ('parking_capacity', models.FloatField(max_length=250)),
                ('address', models.TextField(max_length=10000)),
                ('let', models.TextField(blank=True, max_length=5100)),
                ('long', models.TextField(blank=True, max_length=5100)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_event', to='userApi.createevent')),
            ],
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.BigIntegerField()),
                ('name', models.TextField(blank=True, max_length=2500)),
                ('roomid', models.TextField(blank=True, max_length=2500)),
                ('socketId', models.TextField(blank=True, max_length=2500)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptionplan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=255)),
                ('plan_type', models.CharField(choices=[('0', 'Monthly'), ('1', 'Yearly')], default=1, max_length=10)),
                ('price', models.FloatField()),
                ('discount_value', models.FloatField()),
                ('discount_type', models.CharField(choices=[('1', '%'), ('2', 'fix')], default=1, max_length=10)),
                ('video_count', models.IntegerField()),
                ('image_count', models.IntegerField()),
                ('sms', models.BooleanField(default=False)),
                ('notifications', models.BooleanField(default=False)),
                ('emails', models.BooleanField(default=False)),
                ('socialmedia_promotion', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlists',
            fields=[
                ('wishId', models.AutoField(primary_key=True, serialize=False)),
                ('img', models.TextField(max_length=5000)),
                ('category', models.CharField(max_length=250)),
                ('name_ev', models.CharField(max_length=250)),
                ('place_ev', models.CharField(max_length=250)),
                ('price_ev', models.FloatField(max_length=250)),
                ('eventId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='EventWishlist', to='userApi.createevent')),
                ('partnerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PartnerCompWishlist', to='userApi.o_partnercompanys')),
                ('personalId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PersonalSkillWishlist', to='userApi.o_personalskills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Wishlist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='event/video/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='event/video/thumbnail/')),
                ('detail', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='userApi.createevent')),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('img', models.TextField(max_length=5000, null=True)),
                ('translation_type', models.CharField(max_length=255)),
                ('details', models.CharField(max_length=255)),
                ('Amount', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('holdername', models.TextField(blank=True, max_length=5000, null=True)),
                ('holdercontact', models.CharField(max_length=225, null=True)),
                ('orgId', models.CharField(max_length=255, null=True)),
                ('ticketId', models.AutoField(primary_key=True, serialize=False)),
                ('trans_Id', models.CharField(max_length=250, null=True)),
                ('img', models.TextField(max_length=5000, null=True)),
                ('ticket_no', models.CharField(max_length=250, unique=True)),
                ('payment_status', models.CharField(max_length=250, null=True)),
                ('amount', models.FloatField(max_length=250, null=True)),
                ('category', models.CharField(max_length=250, null=True)),
                ('name', models.CharField(max_length=250, null=True)),
                ('address', models.TextField(max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.CharField(max_length=255, null=True)),
                ('roomname', models.TextField(blank=True, max_length=2500)),
                ('eventId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='EventTickets', to='userApi.createevent')),
                ('partnerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PartnerComTickets', to='userApi.o_partnercompanys')),
                ('personalSkillId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PersonalSkillTickets', to='userApi.o_personalskills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='service/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='userApi.add_service_ev')),
            ],
        ),
        migrations.CreateModel(
            name='Servic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.TextField(blank=True, max_length=5000, null=True)),
                ('service_price', models.FloatField(blank=True, max_length=50, null=True)),
                ('event', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='service', to='userApi.place_events')),
            ],
        ),
        migrations.CreateModel(
            name='RedeemCoins',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Amount', models.CharField(max_length=50, null=True)),
                ('upi_id', models.TextField(max_length=1000, null=True)),
                ('price', models.FloatField(max_length=50, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RedeemCoins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ps_video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(max_length=255, upload_to=userApi.models.get_personalskill_video_filepath)),
                ('live', models.BooleanField(default=False)),
                ('p_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Video', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='ps_photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_file', models.FileField(max_length=255, upload_to=userApi.models.get_personalskill_image_filepath)),
                ('photo_price_period', models.FloatField(max_length=50)),
                ('photo_details', models.TextField(max_length=500)),
                ('live', models.BooleanField(default=False)),
                ('p_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Photo', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='ps_equipments',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('equ_name', models.CharField(max_length=255)),
                ('equ_price', models.FloatField(max_length=50)),
                ('equ_price_period', models.FloatField(max_length=50)),
                ('equ_price_type', models.CharField(choices=[('2', 'PER DAY'), ('1', 'PER HOUR')], default=0, max_length=255)),
                ('equ_details', models.TextField(max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Equipments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ps_companyvideos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_video_file', models.FileField(max_length=255, upload_to=userApi.models.get_per_company_videos_filepath)),
                ('live', models.BooleanField(default=False)),
                ('p_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Company_video', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='ps_companyphotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_photo_file', models.FileField(max_length=255, upload_to=userApi.models.get_per_company_photo_filepath)),
                ('live', models.BooleanField(default=False)),
                ('p_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Company_photo', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalSkillSubCategory',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=500)),
                ('pscategoryid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubCategory', to='userApi.personalskillcategory')),
            ],
        ),
        migrations.CreateModel(
            name='pc_videos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(max_length=255, upload_to=userApi.models.get_pc_videos_filepath)),
                ('live', models.BooleanField(default=False)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='userApi.o_partnercompanys')),
            ],
        ),
        migrations.CreateModel(
            name='pc_photos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_file', models.FileField(max_length=255, upload_to=userApi.models.get_pc_photo_filepath)),
                ('live', models.BooleanField(default=False)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='userApi.o_partnercompanys')),
            ],
        ),
        migrations.CreateModel(
            name='pc_equipments',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('equ_name', models.CharField(max_length=255)),
                ('equ_price', models.FloatField(max_length=100)),
                ('equ_price_period', models.FloatField(max_length=100)),
                ('equ_price_type', models.CharField(choices=[('2', 'PER DAY'), ('1', 'PER HOUR')], default=0, max_length=255)),
                ('equ_details', models.TextField(max_length=1000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EquipmentsPc', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='pc_companyvideos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_video_file', models.FileField(max_length=255, upload_to=userApi.models.get_pc_company_videos_filepath)),
                ('live', models.BooleanField(default=False)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Company_video', to='userApi.o_partnercompanys')),
            ],
        ),
        migrations.CreateModel(
            name='pc_companyphotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_photo_file', models.FileField(max_length=255, upload_to=userApi.models.get_pc_company_photo_filepath)),
                ('live', models.BooleanField(default=False)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Company_photo', to='userApi.o_partnercompanys')),
            ],
        ),
        migrations.CreateModel(
            name='O_Rats',
            fields=[
                ('ratId', models.AutoField(primary_key=True, serialize=False)),
                ('stars', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=250, verbose_name='email')),
                ('review', models.CharField(max_length=250)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('eventId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='EventRating', to='userApi.createevent')),
                ('partnerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PartnerCompRating', to='userApi.o_partnercompanys')),
                ('personalId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PersonalSkillRating', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userIds', models.TextField(max_length=50000, null=True)),
                ('selected_business', models.CharField(choices=[('1', 'HVE YOU PLACES?'), ('2', 'PERSONAL SKILL BUSINESS'), ('3', 'PARTNER COMPANY BUSINESS')], max_length=10)),
                ('status', models.CharField(choices=[('1', 'panding'), ('2', 'send')], default=1, max_length=10)),
                ('membershipplan', models.CharField(choices=[('1', 'LOCAL OFFER MONTHLY'), ('2', 'EVENT SUBSCRIPTION'), ('3', 'LIVE STREAM SUBSCRIPTION')], default=1, max_length=10)),
                ('selected_page', models.TextField(max_length=5000, null=True)),
                ('notification_type', models.TextField(max_length=50000, null=True)),
                ('notification_title', models.TextField(max_length=5000, null=True)),
                ('notification_text', models.TextField(max_length=5000, null=True)),
                ('notification_img', models.FileField(blank=True, max_length=255, upload_to=userApi.models.notification_image_filepath)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.BigIntegerField()),
                ('receiver', models.BigIntegerField()),
                ('content', models.TextField()),
                ('room', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_message', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=255)),
                ('total_price', models.FloatField(null=True)),
                ('video_count', models.IntegerField()),
                ('image_count', models.IntegerField()),
                ('sms', models.BooleanField(default=False)),
                ('notifications', models.BooleanField(default=False)),
                ('emails', models.BooleanField(default=False)),
                ('socialmedia_promotion', models.BooleanField(default=False)),
                ('date_of_purchase', models.DateField(auto_now=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('0', 'DELETED'), ('1', 'ACTIVE'), ('2', 'DEACTIVE')], default=1, max_length=10)),
                ('payment_id', models.TextField(max_length=500, null=True)),
                ('order_id', models.TextField(max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='Subscriptionplan', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='event/image/')),
                ('image_details', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='userApi.createevent')),
            ],
        ),
        migrations.CreateModel(
            name='fcmtoken',
            fields=[
                ('tokId', models.AutoField(primary_key=True, serialize=False)),
                ('apptoken', models.TextField(max_length=5000)),
                ('platform_type', models.TextField(max_length=2000)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='exceluser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.TextField(max_length=500, null=True)),
                ('mobile_no', models.TextField(max_length=15, null=True)),
                ('name', models.TextField(max_length=500, null=True)),
                ('status', models.CharField(choices=[('1', 'panding'), ('2', 'send')], default=1, max_length=255)),
                ('orgID', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='excelUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventPersonalDetails',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('professional_skill', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255)),
                ('mobile_no', models.CharField(max_length=20)),
                ('is_mobile_no_hidden', models.BooleanField(default=True)),
                ('alt_mobile_no', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(max_length=100)),
                ('is_email_hidden', models.BooleanField(default=True)),
                ('flat_no', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('eventId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_details', to='userApi.createevent')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.ImageField(blank=True, null=True, upload_to='image/events/company/video')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='userApi.eventcompanydetails')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/events/company')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='userApi.eventcompanydetails')),
            ],
        ),
        migrations.CreateModel(
            name='equipments_pskill',
            fields=[
                ('equpmentId', models.IntegerField(primary_key=True, serialize=False)),
                ('equpment', models.CharField(max_length=255)),
                ('equpment_price', models.FloatField(max_length=50)),
                ('equpment_price_period', models.FloatField(max_length=50)),
                ('equpment_price_type', models.CharField(max_length=225, null=True)),
                ('equpment_details', models.TextField(max_length=5000)),
                ('pskillid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Equipment', to='userApi.o_personalskills')),
            ],
        ),
        migrations.CreateModel(
            name='equipments_pc',
            fields=[
                ('equpmentId', models.IntegerField(primary_key=True, serialize=False)),
                ('equpment', models.CharField(max_length=255)),
                ('equpment_price', models.FloatField(max_length=50)),
                ('equpment_price_period', models.FloatField(max_length=50)),
                ('equpment_price_type', models.CharField(max_length=225, null=True)),
                ('equpment_details', models.TextField(max_length=5000)),
                ('pcid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Equipments', to='userApi.o_partnercompanys')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountOnEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('de_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='de_user', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='userApi.add_service_ev')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountOnBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('db_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='db_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountAdvance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('da_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='da_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='createevent',
            name='categoryId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_id', to='userApi.eventcategory'),
        ),
        migrations.AddField(
            model_name='createevent',
            name='e_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='createevent',
            name='serivceId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_id', to='userApi.add_service_ev'),
        ),
        migrations.CreateModel(
            name='Checkouts',
            fields=[
                ('chkoId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=250, verbose_name='email')),
                ('phone_no', models.CharField(max_length=12)),
                ('address', models.TextField(max_length=1000)),
                ('eventId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='EventCheckout', to='userApi.createevent')),
                ('partnerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PartnerComCheckout', to='userApi.o_partnercompanys')),
                ('personalSkillId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PersonalSkillCheckout', to='userApi.o_personalskills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=5000)),
                ('reply', models.TextField(blank=True, max_length=5000)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Add_Place_ev',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('place_banner', models.ImageField(blank=True, null=True, upload_to='place/banner/')),
                ('place_price', models.FloatField(max_length=50)),
                ('price_type', models.CharField(choices=[('per_day', 'PER DAY'), ('per_hour', 'PER HOUR'), ('per_event', 'PER EVENT')], default=0, max_length=255)),
                ('details', models.CharField(blank=True, max_length=2500)),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place', to='userApi.createevent')),
            ],
        ),
    ]
